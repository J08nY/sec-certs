{% extends "base.html.jinja2" %}
{% block content %}
	<div id="test"></div>
	<script>
	let data = JSON.parse('{{ network|tojson }}')
	let height = 600;
	let width = 600;
	let color = d => {return d3.scaleOrdinal(d3.schemeCategory10)(d.group);}
	let drag = simulation => {
		function dragstarted(event) {
			if (!event.active) simulation.alphaTarget(0.3).restart();
			event.subject.fx = event.subject.x;
			event.subject.fy = event.subject.y;
		}
		
		function dragged(event) {
			event.subject.fx = event.x;
			event.subject.fy = event.y;
		}
		
		function dragended(event) {
			if (!event.active) simulation.alphaTarget(0);
			event.subject.fx = null;
			event.subject.fy = null;
		}
		
		return d3.drag()
			.on("start", dragstarted)
			.on("drag", dragged)
			.on("end", dragended);
	}

	const links = data.links.map(d => Object.create(d));
	const nodes = data.nodes.map(d => Object.create(d));

	const simulation = d3.forceSimulation(nodes)
      .force("link", d3.forceLink(links).id(d => d.id).distance(0).strength(1))
      .force("charge", d3.forceManyBody().strength(-50))
      .force("x", d3.forceX())
      .force("y", d3.forceY());

	const zoom = d3.zoom().scaleExtent([0.25, 4]).on("zoom", zoomed);

	const svg = d3.create("svg")
		.attr("viewBox", [0, 0, width, height]);

	const link = svg.append("g")
		.attr("stroke", "#999")
		.attr("stroke-opacity", 0.6)
		.selectAll("line")
		.data(links)
		.join("line")
		.attr("stroke-width", d => Math.sqrt(d.value));

	const node = svg.append("g")
		.attr("stroke", "#fff")
		.attr("stroke-width", 1.5)
		.selectAll("circle")
		.data(nodes)
		.join("circle")
		.attr("r", 5)
		.attr("fill", color)
		.call(drag(simulation));
	
	svg.call(zoom).call(zoom.transform, d3.zoomIdentity);

	function zoomed({transform}) {
		console.log(transform);
		link.attr("transform", transform);
		node.attr("transform", transform);
	}

	node.append("title")
		.text(d => d.id);

	simulation.on("tick", () => {
		link
			.attr("x1", d => d.source.x)
			.attr("y1", d => d.source.y)
			.attr("x2", d => d.target.x)
			.attr("y2", d => d.target.y);

		node
			.attr("cx", d => d.x)
			.attr("cy", d => d.y);
	});

	d3.select("#test").append(() => svg.node());
	</script>
{% endblock %}
