{% from "cc/utils.html.jinja2" import render_category, render_status %}

{% macro keywords_card(keyword_scan, doc_prefix, card_id, card_name, keyword_sources, hidden, map_funcs) %}
	{% set ns = namespace(render=False) %}
	{% for heading, keyword in keyword_sources.items() %}
		{% if keyword not in hidden and keyword_scan[keyword] %}
			{% set ns.render = True %}
		{% endif %}
	{% endfor %}
	{% if ns.render %}
		<div class="card mt-1">
			<div class="card-header" id="{{ doc_prefix }}-{{ card_id }}-head">
			<h4 class="mb-0">
				<button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#{{ doc_prefix }}-{{ card_id }}-card" aria-expanded="false" aria-controls="{{ doc_prefix }}-{{ card_id }}-card">
				{{ card_name }}
                    <i class="fas fa-chevron-down"></i>
                            <i class="fas fa-chevron-up"></i>
				</button>
			</h4>
			</div>

			<div id="{{ doc_prefix }}-{{ card_id }}-card" class="collapse" aria-labelledby="{{ doc_prefix }}-{{ card_id }}-head">
			<div class="card-body">
				{% for heading, keyword in keyword_sources.items() %}
					{% if keyword not in hidden and keyword_scan[keyword] %}
						<h5 class="mt-2">{{ heading }}</h5>
						{{ double_join(keyword_scan[keyword], map_func=map_funcs.get(keyword, None)) }}
					{% endif %}
				{% endfor %}
			</div>
			</div>
		</div>
	{% endif %}
{% endmacro %}

{% macro cryptography_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
	{{ keywords_card(keyword_scan, doc_prefix, "crypto", "Cryptography", {"Algorithms": "rules_crypto_algs",
																		  "Engines": "rules_crypto_engines",
																		  "Libraries": "rules_crypto_libraries",
																		  "Elliptic Curves": "rules_ecc_curves",
																		  "Block cipher modes": "rules_block_cipher_modes"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro device_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
	{{ keywords_card(keyword_scan, doc_prefix, "device", "Device", {"Device ID": "rules_device_id",
																	"JavaCard": "rules_javacard",
																	"OS": "rules_os",
																	"CPLC": "rules_cplc",
																	"IC data groups": "rules_IC_data_groups",
																	"Vendor": "rules_vendor"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro security_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
	{{ keywords_card(keyword_scan, doc_prefix, "security", "Security", {"Protection profiles": "rules_protection_profiles",
																		"Security Assurance Requirements (SAR)": "rules_security_assurance_components",
																		"Security Functional Requirements (SFR)": "rules_security_functional_components",
																		"Security level": "rules_security_level"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro other_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
	{{ keywords_card(keyword_scan, doc_prefix, "other", "Other", {"Standards": "rules_standard_id",
																  "Technical reports": "rules_technical_reports"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro double_join(rule_dict, separator=", ", map_func=None) %}
	{% for value in rule_dict.values() %}
		{%- for inside in value.keys() -%}
			{%- if map_func -%}{{ map_func(inside) }}{%- else -%}{{ inside }}{%- endif -%}{%- if not loop.last -%}{{ separator }}{%- endif -%}
		{%- endfor -%}
		{%- if not loop.last -%}{{ separator }}{%- endif -%}
	{% endfor %}
{%- endmacro %}

{% macro render_pagination(pagination, profiles, search=False) %}
    <div id="pagination">
    {% if search %}
        <span style="text-align: center">{{ pagination.info }}</span>
    {% endif %}
    <div class="mt-4 mb-4">
		{{ pagination.links }}
	</div>
	<table class="table table-striped table-bordered mb-4">
        <col style="width:15%">
		<col style="width:64%">
		<col style="width:5%">
		<col style="width:8%">
		<col style="width:8%">
		<thead>
			<tr class="border-bottom">
                <th class="pl-1">ID</th>
				<th>Name</th>
				<th>Status</th>
				<th>Certification date</th>
				<th>Archive date</th>
			</tr>
		</thead>
	{% for profile in profiles %}
        {% set idd = profile["processed"]["cc_pp_csvid"][0] if profile["processed"]["cc_pp_csvid"] else "" %}
        {% set name = profile["csv_scan"]["cc_pp_name"] %}
        {% set status = profile["csv_scan"]["cert_status"] %}
        {% set hashid = profile["_id"] %}
        {% set cert_date = profile["csv_scan"]["cc_certification_date"] %}
        {% set archive_date = profile["csv_scan"]["cc_archived_date"] %}
        {% set category = profile["csv_scan"]["cc_category"] %}
		<tr>
        <td class="pl-1">{{ render_category(category) }}&nbsp;{{ idd }}</td>
		<td><a href="{{ url_for('.entry', hashid=hashid) }}">{{ name }}</a></td>
		<td>{{ render_status(status) }}</td>
		<td>{{ cert_date.strftime("%m/%d/%Y") if cert_date else "" }}</td>
		<td>{{ archive_date.strftime("%m/%d/%Y") if archive_date else "" }}</td>
		</tr>
	{% endfor %}
	</table>
	<div class="mb-4">
		{{ pagination.links }}
	</div>
    </div>
{%- endmacro %}