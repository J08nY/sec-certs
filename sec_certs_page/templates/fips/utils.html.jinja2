{% from "common/entry.html.jinja2" import keywords_card %}

{% macro cryptography_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
    {{ keywords_card(keyword_scan, doc_prefix, "crypto", "Cryptography", {"Symmetric Algorithms": "symmetric_crypto",
                                                                          "Asymmetric Algorithms": "asymmetric_crypto",
                                                                          "Post-quantum Algorithms": "pq_crypto",
                                                                          "Hash functions": "hash_function",
                                                                          "Schemes": "crypto_scheme",
                                                                          "Protocols": "crypto_protocol",
                                                                          "Randomness": "randomness",
																		  "Engines": "crypto_engine",
																		  "Libraries": "crypto_library",
																		  "Elliptic Curves": "ecc_curve",
																		  "Block cipher modes": "cipher_mode",
																		  "TLS cipher suites": "tls_cipher_suite"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro device_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
    {{ keywords_card(keyword_scan, doc_prefix, "device", "Device", {"Device ID": "rules_device_id",
																	"JavaCard": "rules_javacard",
																	"OS": "rules_os",
																	"CPLC": "rules_cplc",
																	"IC data groups": "rules_IC_data_groups",
																	"Vendor": "rules_vendor"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro security_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
    {{ keywords_card(keyword_scan, doc_prefix, "security", "Security", {"Security level": "rules_security_level",
	                                                                    "Defenses": "rules_defenses",
																		"Vulnerabilities": "rules_vulnerabilities"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro other_keywords(keyword_scan, doc_prefix, hidden=[], map_funcs={}) -%}
    {{ keywords_card(keyword_scan, doc_prefix, "other", "Other", {"Standards": "rules_standard_id",
	                                                              "Certificate IDs": "rules_cert_id"}, hidden, map_funcs) }}
{%- endmacro %}

{% macro render_status(status) %}
    {% if status == "Active" %}
        <span class="text-success"><i class="fas fa-check-square"></i> active</span>
    {% elif status == "Historical" %}
        <span class="text-warning"><i class="fas fa-times-circle"></i> historical</span>
    {% elif status == "Revoked" %}
        <span class="text-danger"><i class="fas fa-exclamation-triangle"></i> revoked</span>
    {% else %}
        <span>{{ status }}</span>
    {% endif %}
{%- endmacro %}

{% macro render_document_type(document_type) %}
    {% if document_type == "report" %}
        <span>Certification Report</span>
    {% elif document_type == "target" %}
        <span>Security Policy</span>
    {% endif %}
{%- endmacro %}

{% macro render_type(name) %}
    <span title="{{ name }}">
        {% set ftype = get_fips_type(name) %}
        {% if ftype %}
            <i class="fas fa-fw {{ ftype['icon'] }}"></i>
        {% endif %}
    </span>
{%- endmacro %}

{% macro render_pagination(pagination, certs, search=False) %}
    <div id="pagination">
        {% if search %}
            <span style="text-align: center">{{ pagination.info }}</span>
        {% endif %}
        <div class="mt-4 mb-4">
            {{ pagination.links }}
        </div>
        <table class="table table-striped table-bordered mb-4">
            <col style="width: 3%">
            <col style="width:45%">
            <col style="width:10%">
            <col style="width:5%">
            <col style="width:15%">
            <col style="width:12%">
            <col style="width:10%">
            <thead>
            <tr class="border-bottom">
                <th class="pl-1">ID</th>
                <th>Name</th>
                <th>Status</th>
                <th>Level</th>
                <th>Vendor</th>
                <th>Validation dates</th>
                <th>Sunset date</th>
            </tr>
            </thead>
            {% for cert in certs %}
                {% set id = cert["cert_id"] %}
                {% set name = cert["web_data"]["module_name"] %}
                {% set status = cert["web_data"]["status"] %}
                {% set level = cert["web_data"]["level"] %}
                {% set vendor = cert["web_data"]["vendor"] %}
                {% set status = cert["web_data"]["status"] %}
                {% set hashid = cert["_id"] %}
                {% set cert_dates = cert["web_data"]["validation_history"] %}
                {% set sunset_date = cert["web_data"]["date_sunset"] %}
                {% set type = cert["web_data"]["module_type"] %}
                <tr>
                    <td class="pl-1">#{{ id }}</td>
                    <td>{{ render_type(type) }}&nbsp;<a href="{{ url_for('.entry', hashid=hashid) }}">{{ name }}</a>
                    </td>
                    <td>{{ render_status(status) }}</td>
                    <td>{{ level }}</td>
                    <td>{{ vendor }}</td>
                    <td>{% for entry in cert_dates %}{{ entry["date"]|strftime("%d.%m.%Y") }}<br/>{% endfor %}</td>
                    <td>{% if sunset_date %}{{ sunset_date|strftime("%d.%m.%Y") }}{% endif %}</td>
                </tr>
            {% endfor %}
        </table>
        <div class="mb-4">
            {{ pagination.links }}
        </div>
    </div>
{%- endmacro %}